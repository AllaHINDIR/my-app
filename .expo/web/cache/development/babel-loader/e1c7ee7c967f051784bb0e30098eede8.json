{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\allah\\\\OneDrive\\\\Documents\\\\GitHub\\\\my-app\\\\Components\\\\Profile.js\";\nimport React, { useEffect, useState, useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport axios from 'axios';\nimport Heading from \"./Forum/Heading\";\nvar width = Dimensions.get('window').width;\n\nfunction Profile(props) {\n  var isFocused = useIsFocused();\n\n  var wait = function wait(timeout) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, timeout);\n    });\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    wait(100).then(function () {\n      setRefreshing(false);\n    });\n  }, []);\n  var url = \"http://192.168.1.115:5000/members/\" + props.idProfil;\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      profil = _useState4[0],\n      setProfil = _useState4[1];\n\n  useEffect(function () {\n    axios.get(url).then(function (reponse) {\n      console.log(\"Profil!!\");\n      setProfil(reponse.data);\n    }).catch(function (erreur) {\n      console.log(erreur);\n    });\n  }, [isFocused, refreshing]);\n  return React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, React.createElement(Heading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, \" Profile\"), React.createElement(ScrollView, {\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    style: styles.image,\n    source: {\n      uri: \"https://tse1.mm.bing.net/th?id=OIP.l-lh9fKhhEzl2hdauJWEYwHaHa&pid=Api&...\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }), React.createElement(View, {\n    style: styles.inputView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.TextView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, \" Pr\\xE9nom : \", profil.firstName), React.createElement(Text, {\n    style: styles.TextView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }, \" Nom : \", profil.lastName), React.createElement(Text, {\n    style: styles.TextView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \" Indicatif : \", profil.indicatif), React.createElement(Text, {\n    style: styles.TextView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \" CIN : \", profil.cin), React.createElement(Text, {\n    style: styles.TextView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, \" Email : \", profil.email), React.createElement(Text, {\n    style: styles.TextView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, \" T\\xE9l\\xE9phone : \", profil.phone), React.createElement(Text, {\n    style: styles.TextView,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, \" Adresse : \", profil.adresse)), React.createElement(TouchableOpacity, {\n    style: styles.loginBtn,\n    onPress: function onPress() {\n      Alert.alert(\"Attention\", \"Vous etes sur que vous voulez vous déconnecter ?\", [{\n        text: 'Oui',\n        onPress: function onPress() {\n          console.log(\"Déconnection\");\n          props.navigation.replace('Login');\n        }\n      }, {\n        text: 'Non',\n        onPress: function onPress() {\n          console.log(\"Non pressed\");\n        },\n        style: \"cancel\"\n      }]);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: styles.loginText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, \"D\\xE9connexion\")))));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  image: {\n    width: 100,\n    height: 100,\n    marginVertical: 20\n  },\n  inputView: {\n    backgroundColor: \"rgba(0,128,128,0.3)\",\n    borderRadius: 10,\n    borderColor: \"black\",\n    borderWidth: 2,\n    width: width - 40,\n    padding: 10,\n    alignItems: \"center\"\n  },\n  TextInput: {\n    flex: 1,\n    padding: 10,\n    marginLeft: 20\n  },\n  TextView: {\n    borderRadius: 10,\n    borderColor: \"black\",\n    borderWidth: 1,\n    fontSize: 20,\n    width: width - 100,\n    backgroundColor: \"white\",\n    margin: 3,\n    padding: 3\n  },\n  loginBtn: {\n    width: \"50%\",\n    marginHorizontal: \"25%\",\n    borderRadius: 25,\n    height: 40,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginVertical: 20,\n    backgroundColor: \"rgba(0,128,128,0.7)\"\n  }\n});\nexport default Profile;","map":{"version":3,"sources":["C:/Users/allah/OneDrive/Documents/GitHub/my-app/Components/Profile.js"],"names":["React","useEffect","useState","useCallback","useIsFocused","axios","Heading","width","Dimensions","get","Profile","props","isFocused","wait","timeout","Promise","resolve","setTimeout","refreshing","setRefreshing","onRefresh","then","url","idProfil","profil","setProfil","reponse","console","log","data","catch","erreur","styles","container","image","uri","inputView","TextView","firstName","lastName","indicatif","cin","email","phone","adresse","loginBtn","Alert","alert","text","onPress","navigation","replace","style","loginText","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","height","marginVertical","borderRadius","borderColor","borderWidth","padding","TextInput","marginLeft","fontSize","margin","marginHorizontal"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,WAArC,QAAwD,OAAxD;;;;;;;;;;;;AAUA,SAASC,YAAT,QAA6B,0BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP;AAGA,IAAMC,KAAK,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAvC;;AACA,SAASG,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,MAAMC,SAAS,GAAGR,YAAY,EAA9B;;AAEA,MAAMS,IAAI,GAAG,SAAPA,IAAO,CAACC,OAAD,EAAa;AACxB,WAAO,IAAIC,OAAJ,CAAY,UAAAC,OAAO;AAAA,aAAIC,UAAU,CAACD,OAAD,EAAUF,OAAV,CAAd;AAAA,KAAnB,CAAP;AACD,GAFD;;AAGA,kBAAoCZ,QAAQ,CAAC,KAAD,CAA5C;AAAA;AAAA,MAAOgB,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,SAAS,GAAGjB,WAAW,CAAC,YAAM;AAClCgB,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAN,IAAAA,IAAI,CAAC,GAAD,CAAJ,CAAUQ,IAAV,CAAe,YAAM;AACnBF,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD,KAFD;AAGD,GAL4B,EAK1B,EAL0B,CAA7B;AAQA,MAAIG,GAAG,GAAG,uCAAuCX,KAAK,CAACY,QAAvD;;AACA,mBAA4BrB,QAAQ,CAAC,EAAD,CAApC;AAAA;AAAA,MAAOsB,MAAP;AAAA,MAAeC,SAAf;;AACAxB,EAAAA,SAAS,CAAC,YAAM;AACdI,IAAAA,KAAK,CAACI,GAAN,CAAUa,GAAV,EACGD,IADH,CACQ,UAACK,OAAD,EAAa;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAH,MAAAA,SAAS,CAACC,OAAO,CAACG,IAAT,CAAT;AAED,KALH,EAMGC,KANH,CAMS,UAACC,MAAD,EAAY;AACjBJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,MAAZ;AACD,KARH;AASD,GAVQ,EAUN,CAACnB,SAAD,EAAYM,UAAZ,CAVM,CAAT;AAYA,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEc,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAE;AAAE1B,MAAAA,KAAK,EAAE;AAAT,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEyB,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAED,MAAM,CAACE,KAArB;AAA4B,IAAA,MAAM,EAAE;AAAEC,MAAAA,GAAG,EAAE;AAAP,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACI,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAyCb,MAAM,CAACc,SAAhD,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEN,MAAM,CAACK,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAsCb,MAAM,CAACe,QAA7C,CAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEP,MAAM,CAACK,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAA4Cb,MAAM,CAACgB,SAAnD,CAHF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAER,MAAM,CAACK,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAsCb,MAAM,CAACiB,GAA7C,CAJF,EAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAET,MAAM,CAACK,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAwCb,MAAM,CAACkB,KAA/C,CALF,EAME,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEV,MAAM,CAACK,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAA4Cb,MAAM,CAACmB,KAAnD,CANF,EAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEX,MAAM,CAACK,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA0Cb,MAAM,CAACoB,OAAjD,CAPF,CAHF,EAYE,oBAAC,gBAAD;AAAkB,IAAA,KAAK,EAAEZ,MAAM,CAACa,QAAhC;AACE,IAAA,OAAO,EAAE,mBAAM;AACbC,MAAAA,KAAK,CAACC,KAAN,CACE,WADF,EAEE,kDAFF,EAGE,CAAC;AACCC,QAAAA,IAAI,EAAE,KADP;AAECC,QAAAA,OAAO,EAAE,mBAAM;AACbtB,UAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACAjB,UAAAA,KAAK,CAACuC,UAAN,CAAiBC,OAAjB,CAAyB,OAAzB;AACD;AALF,OAAD,EAOA;AACEH,QAAAA,IAAI,EAAE,KADR;AAEEC,QAAAA,OAAO,EAAE,mBAAM;AACbtB,UAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,SAJH;AAKEwB,QAAAA,KAAK,EAAE;AALT,OAPA,CAHF;AAkBD,KApBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAsBE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEpB,MAAM,CAACqB,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAtBF,CAZF,CAFF,CAFF,CADF;AA6CD;;AAED,IAAMrB,MAAM,GAAGsB,UAAU,CAACC,MAAX,CAAkB;AAC/BtB,EAAAA,SAAS,EAAE;AACTuB,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,eAAe,EAAE,MAFR;AAGTC,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP,GADoB;AAQ/BzB,EAAAA,KAAK,EAAE;AACL3B,IAAAA,KAAK,EAAE,GADF;AAELqD,IAAAA,MAAM,EAAE,GAFH;AAGLC,IAAAA,cAAc,EAAE;AAHX,GARwB;AAc/BzB,EAAAA,SAAS,EAAE;AACTqB,IAAAA,eAAe,EAAE,qBADR;AAETK,IAAAA,YAAY,EAAE,EAFL;AAGTC,IAAAA,WAAW,EAAE,OAHJ;AAITC,IAAAA,WAAW,EAAE,CAJJ;AAKTzD,IAAAA,KAAK,EAAEA,KAAK,GAAG,EALN;AAMT0D,IAAAA,OAAO,EAAE,EANA;AAOTP,IAAAA,UAAU,EAAE;AAPH,GAdoB;AAwB/BQ,EAAAA,SAAS,EAAE;AAETV,IAAAA,IAAI,EAAE,CAFG;AAGTS,IAAAA,OAAO,EAAE,EAHA;AAITE,IAAAA,UAAU,EAAE;AAJH,GAxBoB;AA8B/B9B,EAAAA,QAAQ,EAAE;AACRyB,IAAAA,YAAY,EAAE,EADN;AAERC,IAAAA,WAAW,EAAE,OAFL;AAGRC,IAAAA,WAAW,EAAE,CAHL;AAIRI,IAAAA,QAAQ,EAAE,EAJF;AAKR7D,IAAAA,KAAK,EAAEA,KAAK,GAAG,GALP;AAMRkD,IAAAA,eAAe,EAAE,OANT;AAORY,IAAAA,MAAM,EAAE,CAPA;AAQRJ,IAAAA,OAAO,EAAE;AARD,GA9BqB;AAwC/BpB,EAAAA,QAAQ,EAAE;AACRtC,IAAAA,KAAK,EAAE,KADC;AAER+D,IAAAA,gBAAgB,EAAE,KAFV;AAGRR,IAAAA,YAAY,EAAE,EAHN;AAIRF,IAAAA,MAAM,EAAE,EAJA;AAKRF,IAAAA,UAAU,EAAE,QALJ;AAMRC,IAAAA,cAAc,EAAE,QANR;AAORE,IAAAA,cAAc,EAAE,EAPR;AAQRJ,IAAAA,eAAe,EAAE;AART;AAxCqB,CAAlB,CAAf;AAoDA,eAAe/C,OAAf","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport {\r\n  StyleSheet,\r\n  Text, TextInput,\r\n  View, ScrollView, Dimensions, RefreshControl,\r\n  Image,\r\n  Button,\r\n  TouchableOpacity,\r\n  Alert\r\n} from 'react-native';\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport axios from 'axios';\r\n\r\nimport Heading from './Forum/Heading'\r\n\r\n\r\nconst width = Dimensions.get('window').width; //full width\r\nfunction Profile(props) {\r\n  const isFocused = useIsFocused();\r\n  //pour rafraichir la page : \r\n  const wait = (timeout) => {\r\n    return new Promise(resolve => setTimeout(resolve, timeout));\r\n  }\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  const onRefresh = useCallback(() => {\r\n    setRefreshing(true);\r\n    wait(100).then(() => {\r\n      setRefreshing(false);\r\n    });\r\n  }, []);\r\n\r\n  //Recuperation des données\r\n  let url = \"http://192.168.1.115:5000/members/\" + props.idProfil;\r\n  const [profil, setProfil] = useState([]);\r\n  useEffect(() => {\r\n    axios.get(url)\r\n      .then((reponse) => {\r\n        console.log(\"Profil!!\")\r\n        setProfil(reponse.data)\r\n        //console.log(reponse.data)\r\n      })\r\n      .catch((erreur) => {\r\n        console.log(erreur)\r\n      })\r\n  }, [isFocused, refreshing]);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Heading> Profile</Heading>\r\n      <ScrollView style={{ width: \"100%\" }}>\r\n\r\n        <View style={styles.container}>\r\n          {/* <Image style={styles.image} source={profil.imagePath} /> */}\r\n          <Image style={styles.image} source={{ uri: \"https://tse1.mm.bing.net/th?id=OIP.l-lh9fKhhEzl2hdauJWEYwHaHa&pid=Api&...\" }} />\r\n          <View style={styles.inputView}>\r\n            <Text style={styles.TextView}> Prénom : {profil.firstName}</Text>\r\n            <Text style={styles.TextView}> Nom : {profil.lastName}</Text>\r\n            <Text style={styles.TextView}> Indicatif : {profil.indicatif}</Text>\r\n            <Text style={styles.TextView}> CIN : {profil.cin}</Text>\r\n            <Text style={styles.TextView}> Email : {profil.email}</Text>\r\n            <Text style={styles.TextView}> Téléphone : {profil.phone}</Text>\r\n            <Text style={styles.TextView}> Adresse : {profil.adresse}</Text>\r\n          </View>\r\n          <TouchableOpacity style={styles.loginBtn}\r\n            onPress={() => {\r\n              Alert.alert(\r\n                \"Attention\",\r\n                \"Vous etes sur que vous voulez vous déconnecter ?\",\r\n                [{\r\n                  text: 'Oui',\r\n                  onPress: () => {\r\n                    console.log(\"Déconnection\");\r\n                    props.navigation.replace('Login');\r\n                  }\r\n                },\r\n                {\r\n                  text: 'Non',\r\n                  onPress: () => {\r\n                    console.log(\"Non pressed\")\r\n                  },\r\n                  style: \"cancel\"\r\n                }]\r\n              )\r\n            }}\r\n          >\r\n            <Text style={styles.loginText}>Déconnexion</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#fff\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n\r\n  image: {\r\n    width: 100,\r\n    height: 100,\r\n    marginVertical: 20,\r\n  },\r\n\r\n  inputView: {\r\n    backgroundColor: \"rgba(0,128,128,0.3)\",\r\n    borderRadius: 10,\r\n    borderColor: \"black\",\r\n    borderWidth: 2,\r\n    width: width - 40,\r\n    padding: 10,\r\n    alignItems: \"center\",\r\n  },\r\n\r\n  TextInput: {\r\n    //height: 50,\r\n    flex: 1,\r\n    padding: 10,\r\n    marginLeft: 20,\r\n  },\r\n  TextView: {\r\n    borderRadius: 10,\r\n    borderColor: \"black\",\r\n    borderWidth: 1,\r\n    fontSize: 20,\r\n    width: width - 100,\r\n    backgroundColor: \"white\",\r\n    margin: 3,\r\n    padding: 3,\r\n  },\r\n  loginBtn: {\r\n    width: \"50%\",\r\n    marginHorizontal: \"25%\",\r\n    borderRadius: 25,\r\n    height: 40,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    marginVertical: 20,\r\n    backgroundColor: \"rgba(0,128,128,0.7)\",\r\n  },\r\n});\r\n\r\nexport default Profile"]},"metadata":{},"sourceType":"module"}