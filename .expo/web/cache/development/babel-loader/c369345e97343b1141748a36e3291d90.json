{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\allah\\\\OneDrive\\\\Documents\\\\GitHub\\\\my-app\\\\Components\\\\Themes.js\";\n\nimport React, { useEffect, useState, useCallback } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport axios from 'axios';\nimport { Searchbar } from 'react-native-paper';\nimport Theme from \"./Forum/Theme\";\nimport Heading from \"./Forum/Heading\";\n\nvar Themes = function Themes(props) {\n  var isFocused = useIsFocused();\n\n  var wait = function wait(timeout) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, timeout);\n    });\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      refreshing = _useState2[0],\n      setRefreshing = _useState2[1];\n\n  var onRefresh = useCallback(function () {\n    setRefreshing(true);\n    wait(100).then(function () {\n      setRefreshing(false);\n    });\n  }, []);\n  var url = props.url + 'themes';\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listTheme = _useState4[0],\n      setListTheme = _useState4[1];\n\n  useEffect(function () {\n    axios.get(url).then(function (reponse) {\n      console.log(\"themes!!\");\n      setListTheme(reponse.data);\n    }).catch(function (erreur) {\n      console.log(erreur);\n    });\n  }, [isFocused, refreshing]);\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchQuery = _useState6[0],\n      setSearchQuery = _useState6[1];\n\n  function onChangeSearch(searchQuery) {\n    setSearchQuery(searchQuery);\n  }\n\n  var ensThemes = [];\n\n  for (var i = 0; i < listTheme.length; i++) {\n    if (listTheme[i].title.toUpperCase().includes(searchQuery.toUpperCase()) || listTheme[i].description.toUpperCase().includes(searchQuery.toUpperCase())) {\n      ensThemes.push(React.createElement(Theme, {\n        theme: listTheme[i],\n        key: listTheme[i]._id,\n        navigation: props.navigation,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 9\n        }\n      }));\n    }\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }, React.createElement(Heading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Themes\"), React.createElement(ScrollView, {\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 35\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: {\n      backgroundColor: '#111111',\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      padding: 10\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, React.createElement(Searchbar, {\n    style: styles.searchBar,\n    inputStyle: styles.input,\n    iconColor: \"#ffffff\",\n    placeholder: \"Chercher ici...\",\n    placeholderTextColor: \"#ffffff\",\n    onChangeText: onChangeSearch,\n    value: searchQuery,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })), React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, ensThemes)));\n};\n\nvar width = Dimensions.get('window').width;\nvar styles = StyleSheet.create({\n  container: {\n    width: width,\n    backgroundColor: '#000000',\n    borderRadius: 0,\n    margin: 0,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  searchBar: {\n    width: width - 20,\n    backgroundColor: '#222222',\n    borderRadius: 10,\n    margin: 0,\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  input: {\n    color: \"#ffffff\"\n  }\n});\nexport default Themes;","map":{"version":3,"sources":["C:/Users/allah/OneDrive/Documents/GitHub/my-app/Components/Themes.js"],"names":["React","useEffect","useState","useCallback","useIsFocused","axios","Searchbar","Theme","Heading","Themes","props","isFocused","wait","timeout","Promise","resolve","setTimeout","refreshing","setRefreshing","onRefresh","then","url","listTheme","setListTheme","get","reponse","console","log","data","catch","erreur","searchQuery","setSearchQuery","onChangeSearch","ensThemes","i","length","title","toUpperCase","includes","description","push","_id","navigation","flex","justifyContent","alignItems","backgroundColor","padding","styles","searchBar","input","container","width","Dimensions","StyleSheet","create","borderRadius","margin","color"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useCallback } from 'react';\r\nimport { StyleSheet, View, ScrollView, Dimensions, RefreshControl } from 'react-native';\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport axios from 'axios';\r\nimport { Searchbar } from 'react-native-paper';\r\n\r\nimport Theme from './Forum/Theme'\r\nimport Heading from './Forum/Heading'\r\n\r\n\r\nconst Themes = (props) => {\r\n  const isFocused = useIsFocused();\r\n  //pour rafraichir la page : \r\n  const wait = (timeout) => {\r\n    return new Promise(resolve => setTimeout(resolve, timeout));\r\n  }\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  const onRefresh = useCallback(() => {\r\n    setRefreshing(true);\r\n    wait(100).then(() => {\r\n      setRefreshing(false);\r\n    });\r\n  }, []);\r\n\r\n  //Recuperation des données\r\n  let url = props.url + 'themes';\r\n  const [listTheme, setListTheme] = useState([]);\r\n  useEffect(() => {\r\n    axios.get(url)\r\n      .then((reponse) => {\r\n        console.log(\"themes!!\")\r\n        setListTheme(reponse.data)\r\n      })\r\n      .catch((erreur) => {\r\n        console.log(erreur)\r\n      })\r\n  }, [isFocused, refreshing]);\r\n\r\n  //Search\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  function onChangeSearch(searchQuery) {\r\n    setSearchQuery(searchQuery);\r\n  }\r\n\r\n  //Remplissage des themes\r\n  let ensThemes = []\r\n  for (let i = 0; i < listTheme.length; i++) {\r\n    if (listTheme[i].title.toUpperCase().includes(searchQuery.toUpperCase()) || listTheme[i].description.toUpperCase().includes(searchQuery.toUpperCase())) {\r\n      ensThemes.push(\r\n        <Theme\r\n          theme={listTheme[i]}\r\n          key={listTheme[i]._id}\r\n          navigation={props.navigation} />\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Heading>Themes</Heading>\r\n      <ScrollView refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}>\r\n        <View style={{ backgroundColor: '#111111', flex: 1, justifyContent: 'center', alignItems: 'center', padding: 10 }}>\r\n          <Searchbar\r\n            style={styles.searchBar}\r\n            inputStyle={styles.input}\r\n            iconColor='#ffffff'\r\n            placeholder=\"Chercher ici...\"\r\n            placeholderTextColor=\"#ffffff\"\r\n            onChangeText={onChangeSearch}\r\n\r\n            value={searchQuery}\r\n\r\n          />\r\n        </View>\r\n        <View style={styles.container}>\r\n          {ensThemes}\r\n        </View>\r\n      </ScrollView>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst width = Dimensions.get('window').width; //full width\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: width,\r\n    backgroundColor: '#000000',\r\n    borderRadius: 0,\r\n    margin: 0,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  searchBar: {\r\n    width: width - 20,\r\n    backgroundColor: '#222222',\r\n    borderRadius: 10,\r\n    margin: 0,\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n\r\n  },\r\n  input: {\r\n    color: \"#ffffff\",\r\n  }\r\n});\r\nexport default Themes;"]},"metadata":{},"sourceType":"module"}