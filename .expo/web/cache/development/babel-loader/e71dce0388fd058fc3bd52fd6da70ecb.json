{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\allah\\\\OneDrive\\\\Documents\\\\GitHub\\\\my-app\\\\Components\\\\Forum.js\";\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport Discussions from \"./Discussions\";\nimport Replies from \"./Replies\";\nimport Themes from \"./Themes\";\nimport NewReply from \"./Forum/NewReply\";\nimport NewDiscussion from \"./Forum/NewDiscussion\";\nimport FlashMessage from 'react-native-flash-message';\nvar Stack = createStackNavigator();\n\nfunction Forum(props) {\n  var url = \"http://192.168.1.115:5000/\";\n  var idprofil = props.idProfil;\n\n  function ThemesScreen(_ref) {\n    var navigation = _ref.navigation;\n    return React.createElement(Themes, {\n      navigation: navigation,\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    });\n  }\n\n  function DiscussionsScreen(_ref2) {\n    var navigation = _ref2.navigation,\n        route = _ref2.route;\n    var idTheme = route.params.idTheme;\n    var titreTheme = route.params.titreTheme;\n    return React.createElement(Discussions, {\n      navigation: navigation,\n      idTheme: idTheme,\n      titreTheme: titreTheme,\n      idProfil: idprofil,\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    });\n  }\n\n  function NewDiscussionScreen(_ref3) {\n    var navigation = _ref3.navigation,\n        route = _ref3.route;\n    var idTheme = route.params.idTheme;\n    var titreTheme = route.params.titreTheme;\n    var titre = route.params.titre;\n    var inputValue = route.params.inputValue;\n    var EnableBtn = route.params.EnableBtn;\n    var idTopic = route.params.idTopic;\n    return React.createElement(NewDiscussion, {\n      navigation: navigation,\n      url: url,\n      idTopic: idTopic,\n      idTheme: idTheme,\n      titreTheme: titreTheme,\n      titre: titre,\n      inputValue: inputValue,\n      EnableBtn: EnableBtn,\n      idProfil: idprofil,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    });\n  }\n\n  function RepliesScreen(_ref4) {\n    var navigation = _ref4.navigation,\n        route = _ref4.route;\n    var titreTheme = route.params.titreTheme;\n    var discussion = route.params.discussion;\n    var idTopic = route.params.idTopic;\n    return React.createElement(Replies, {\n      navigation: navigation,\n      titreTheme: titreTheme,\n      url: url,\n      idTopic: idTopic,\n      idProfil: idprofil,\n      discussion: discussion,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    });\n  }\n\n  function NewReplyScreen(_ref5) {\n    var navigation = _ref5.navigation,\n        route = _ref5.route;\n    var titreTheme = route.params.titreTheme;\n    var discussion = route.params.discussion;\n    var message = route.params.message;\n    var id = route.params.id;\n    var EnableBtn = route.params.EnableBtn;\n    return React.createElement(NewReply, {\n      navigation: navigation,\n      discussion: discussion,\n      titreTheme: titreTheme,\n      idProfil: idprofil,\n      message: message,\n      EnableBtn: EnableBtn,\n      id: id,\n      url: url,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return React.createElement(NavigationContainer, {\n    independent: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Themes\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Themes\",\n    component: ThemesScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Replies\",\n    component: RepliesScreen,\n    options: {\n      title: 'Reponses',\n      headerStyle: {\n        backgroundColor: '#111111'\n      },\n      headerTintColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NewReply\",\n    component: NewReplyScreen,\n    options: {\n      title: 'Nouvelle RÃ©ponse',\n      headerStyle: {\n        backgroundColor: '#111111'\n      },\n      headerTintColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"NewDiscussion\",\n    component: NewDiscussionScreen,\n    options: {\n      title: 'Nouvelle Discussions',\n      headerStyle: {\n        backgroundColor: '#111111'\n      },\n      headerTintColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Discussions\",\n    component: DiscussionsScreen,\n    options: {\n      title: 'Discussions',\n      headerStyle: {\n        backgroundColor: '#111111'\n      },\n      headerTintColor: '#fff'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Forum;","map":{"version":3,"sources":["C:/Users/allah/OneDrive/Documents/GitHub/my-app/Components/Forum.js"],"names":["React","NavigationContainer","createStackNavigator","Discussions","Replies","Themes","NewReply","NewDiscussion","FlashMessage","Stack","Forum","props","url","idprofil","idProfil","ThemesScreen","navigation","DiscussionsScreen","route","idTheme","params","titreTheme","NewDiscussionScreen","titre","inputValue","EnableBtn","idTopic","RepliesScreen","discussion","NewReplyScreen","message","id","headerShown","title","headerStyle","backgroundColor","headerTintColor"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport Discussions from './Discussions';\r\nimport Replies from './Replies';\r\nimport Themes from './Themes';\r\nimport NewReply from './Forum/NewReply';\r\nimport NewDiscussion from './Forum/NewDiscussion'\r\nimport FlashMessage from 'react-native-flash-message';\r\n\r\nconst Stack = createStackNavigator();\r\nfunction Forum(props) {\r\n\r\n  const url = \"http://192.168.1.115:5000/\" //adresse ip du pc (localHost ne fonctionne pas);\r\n  const idprofil = props.idProfil;\r\n\r\n  function ThemesScreen({ navigation }) {\r\n    return (\r\n      <Themes\r\n        navigation={navigation}\r\n        url={url} />\r\n    );\r\n  }\r\n  function DiscussionsScreen({ navigation, route }) {\r\n    //route assure le passage des parametres \r\n    const idTheme = route.params.idTheme;\r\n    const titreTheme = route.params.titreTheme;\r\n    return (\r\n      <Discussions\r\n        navigation={navigation}\r\n        idTheme={idTheme}\r\n        titreTheme={titreTheme}\r\n        idProfil={idprofil}\r\n        url={url} />\r\n    );\r\n  }\r\n\r\n  function NewDiscussionScreen({ navigation, route }) {\r\n    const idTheme = route.params.idTheme;\r\n    const titreTheme = route.params.titreTheme;\r\n    const titre = route.params.titre;\r\n    const inputValue = route.params.inputValue;\r\n\r\n    const EnableBtn = route.params.EnableBtn;\r\n    const idTopic = route.params.idTopic;\r\n    return (\r\n      <NewDiscussion\r\n        navigation={navigation}\r\n        url={url}\r\n        idTopic={idTopic}\r\n        idTheme={idTheme}\r\n        titreTheme={titreTheme}\r\n        titre={titre}\r\n        inputValue={inputValue}\r\n        EnableBtn={EnableBtn}\r\n        idProfil={idprofil} />\r\n    );\r\n  }\r\n\r\n  function RepliesScreen({ navigation, route }) {\r\n    const titreTheme = route.params.titreTheme;\r\n    const discussion = route.params.discussion;\r\n    const idTopic = route.params.idTopic;\r\n    //console.log(discussion)\r\n    return (\r\n      <Replies\r\n        navigation={navigation}\r\n        titreTheme={titreTheme}\r\n        url={url}\r\n        idTopic={idTopic}\r\n        idProfil={idprofil}\r\n        discussion={discussion} />\r\n    );\r\n  }\r\n\r\n  function NewReplyScreen({ navigation, route }) {\r\n    const titreTheme = route.params.titreTheme;\r\n    const discussion = route.params.discussion;\r\n    const message = route.params.message;\r\n    const id = route.params.id;\r\n    const EnableBtn = route.params.EnableBtn;\r\n    return (\r\n      <NewReply\r\n        navigation={navigation}\r\n        discussion={discussion}\r\n        titreTheme={titreTheme}\r\n        idProfil={idprofil}\r\n        message={message}\r\n        EnableBtn={EnableBtn}\r\n        id={id}\r\n        url={url} />\r\n    );\r\n  }\r\n\r\n\r\n\r\n  //console.log(props)\r\n  return (\r\n    <NavigationContainer independent={true}>\r\n      <Stack.Navigator initialRouteName=\"Themes\">\r\n        <Stack.Screen name=\"Themes\" component={ThemesScreen} options={{ headerShown: false }} />\r\n        <Stack.Screen name=\"Replies\" component={RepliesScreen} options={{ title: 'Reponses', headerStyle: { backgroundColor: '#111111' }, headerTintColor: '#fff' }} />\r\n        <Stack.Screen name=\"NewReply\" component={NewReplyScreen} options={{ title: 'Nouvelle RÃ©ponse', headerStyle: { backgroundColor: '#111111' }, headerTintColor: '#fff' }} />\r\n        <Stack.Screen name=\"NewDiscussion\" component={NewDiscussionScreen} options={{ title: 'Nouvelle Discussions', headerStyle: { backgroundColor: '#111111' }, headerTintColor: '#fff' }} />\r\n        <Stack.Screen name=\"Discussions\" component={DiscussionsScreen} options={{ title: 'Discussions', headerStyle: { backgroundColor: '#111111' }, headerTintColor: '#fff' }} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}\r\n\r\nexport default Forum;"]},"metadata":{},"sourceType":"module"}