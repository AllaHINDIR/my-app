{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\allah\\\\OneDrive\\\\Documents\\\\GitHub\\\\my-app\\\\Components\\\\Forum\\\\NewDiscussion.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Divider, Button } from 'react-native-elements';\nimport { showMessage } from \"react-native-flash-message\";\nimport Display from 'react-native-display';\nimport axios from 'axios';\n\nvar NewDiscussion = function NewDiscussion(props) {\n  var idTheme = props.idTheme;\n  var titreTheme = props.titreTheme;\n  var idProfil = props.idProfil;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      Enable = _useState2[0],\n      setEnable = _useState2[1];\n\n  var EnableBtn = props.EnableBtn;\n\n  var _useState3 = useState(props.titre),\n      _useState4 = _slicedToArray(_useState3, 2),\n      titre = _useState4[0],\n      setTitre = _useState4[1];\n\n  var _useState5 = useState(props.inputValue),\n      _useState6 = _slicedToArray(_useState5, 2),\n      inputValue = _useState6[0],\n      setInputValue = _useState6[1];\n\n  function insertNouvelleDiscussion(titre, description) {\n    var url = props.url + \"topics\";\n    axios.post(url, {\n      title: titre,\n      message: description,\n      theme: idTheme,\n      creator: idProfil\n    }).then(function (reponse) {\n      console.log(reponse.data);\n      showMessage({\n        message: 'Une nouvelle discussion a été ajouté',\n        type: 'success'\n      });\n      setTitre(\"\");\n      setInputValue(\"\");\n      setEnable(false);\n      props.navigation.navigate(\"Discussions\", {\n        idTheme: props.idTheme,\n        titreTheme: props.titreTheme\n      });\n    }).catch(function (err) {\n      showMessage({\n        message: 'Ajout échoué',\n        type: 'danger'\n      });\n      setEnable(true);\n    });\n  }\n\n  function modifierDiscussion(titre, description) {\n    var url = props.url + \"topics/\" + props.idTopic;\n    axios.put(url, {\n      title: titre,\n      message: description\n    }).then(function (reponse) {\n      console.log(reponse.data);\n      showMessage({\n        message: 'La discussion a été modifiée',\n        type: 'success'\n      });\n      setEnable(false);\n      props.navigation.navigate(\"Discussions\", {\n        idTheme: props.idTheme,\n        titreTheme: props.titreTheme\n      });\n    }).catch(function (err) {\n      showMessage({\n        message: 'Modification échouée',\n        type: 'danger'\n      });\n      setEnable(true);\n    });\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.discussion,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.titreTheme,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, titreTheme), React.createElement(Display, {\n    enable: Enable,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 11\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'red',\n      marginTop: -30,\n      alignSelf: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, ' ', \"le titre et la description sont obligatoires\", ' ')), React.createElement(Divider, {\n    style: {\n      backgroundColor: 'black',\n      marginBottom: 20\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Titre: \"), React.createElement(TextInput, {\n    value: titre,\n    style: styles.titleZone,\n    onChangeText: setTitre,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }), React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Description: \"), React.createElement(ScrollView, {\n    style: {\n      height: 80\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, React.createElement(TextInput, {\n    style: styles.DescriptionZone,\n    value: inputValue,\n    onChangeText: setInputValue,\n    multiline: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  })), React.createElement(View, {\n    style: {\n      flexDirection: 'row',\n      justifyContent: 'flex-end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, React.createElement(Display, {\n    enable: !EnableBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    icon: {\n      name: 'send',\n      size: 20,\n      color: 'black'\n    },\n    type: \"outline\",\n    raised: true,\n    onPress: function onPress() {\n      insertNouvelleDiscussion(titre, inputValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  })), React.createElement(Display, {\n    enable: EnableBtn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    icon: {\n      name: 'edit',\n      size: 20,\n      color: 'black'\n    },\n    type: \"outline\",\n    raised: true,\n    onPress: function onPress() {\n      modifierDiscussion(titre, inputValue);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  })))));\n};\n\nvar width = Dimensions.get('window').width;\nvar styles = StyleSheet.create({\n  container: {\n    width: width,\n    flex: 1,\n    backgroundColor: '#111111',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  discussion: {\n    height: 400,\n    padding: 10,\n    width: width - 10,\n    backgroundColor: \"#ffffff\",\n    borderColor: \"#000000\",\n    borderRadius: 10,\n    marginVertical: 5\n  },\n  titleZone: {\n    height: 50,\n    borderWidth: 2,\n    borderRadius: 8,\n    padding: 10\n  },\n  DescriptionZone: {\n    height: 150,\n    borderWidth: 2,\n    borderRadius: 8,\n    textAlignVertical: \"top\",\n    padding: 10\n  },\n  titreTheme: {\n    fontSize: 30,\n    alignSelf: 'center',\n    marginBottom: 30\n  }\n});\nexport default NewDiscussion;","map":{"version":3,"sources":["C:/Users/allah/OneDrive/Documents/GitHub/my-app/Components/Forum/NewDiscussion.js"],"names":["React","useEffect","useState","Divider","Button","showMessage","Display","axios","NewDiscussion","props","idTheme","titreTheme","idProfil","Enable","setEnable","EnableBtn","titre","setTitre","inputValue","setInputValue","insertNouvelleDiscussion","description","url","post","title","message","theme","creator","then","reponse","console","log","data","type","navigation","navigate","catch","err","modifierDiscussion","idTopic","put","styles","container","discussion","color","marginTop","alignSelf","backgroundColor","marginBottom","titleZone","height","DescriptionZone","flexDirection","justifyContent","name","size","width","Dimensions","get","StyleSheet","create","flex","alignItems","padding","borderColor","borderRadius","marginVertical","borderWidth","textAlignVertical","fontSize"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, Text, View, Image, Dimensions, TextInput, ScrollView } from 'react-native';\r\nimport {Divider, Button } from 'react-native-elements';\r\nimport { showMessage } from \"react-native-flash-message\";\r\nimport Display from 'react-native-display';\r\nimport axios from 'axios';\r\n\r\nconst NewDiscussion = (props) => {\r\n    const idTheme = props.idTheme;\r\n    const titreTheme = props.titreTheme;\r\n    const idProfil = props.idProfil;\r\n\r\n    const [Enable,setEnable] = useState(false);\r\n    const EnableBtn = props.EnableBtn;\r\n  \r\n    const [titre, setTitre] = useState(props.titre);\r\n    const [inputValue, setInputValue] = useState(props.inputValue);\r\n\r\n    //pour inserer une nouvelle discussion\r\n    function insertNouvelleDiscussion(titre,description) {\r\n            var url = props.url + \"topics\";\r\n            axios.post(url,{\r\n                title:titre,\r\n                message:description,\r\n                theme:idTheme,\r\n                creator:idProfil   // ici on doit le remplecer par le id du creator \r\n            }).then((reponse)=> {\r\n                console.log(reponse.data);\r\n                showMessage({\r\n                    message: 'Une nouvelle discussion a été ajouté',\r\n                    type: 'success',\r\n                  });\r\n                setTitre(\"\");\r\n                setInputValue(\"\");\r\n                setEnable(false);\r\n                props.navigation.navigate(\"Discussions\",{idTheme:props.idTheme, titreTheme:props.titreTheme});\r\n            }).catch(err=> {\r\n                    showMessage({\r\n                        message: 'Ajout échoué',\r\n                        type: 'danger',\r\n                      });\r\n                      setEnable(true);\r\n              });\r\n    }\r\n\r\n    //pour modifier le titre/description d'une discussion\r\n    function modifierDiscussion(titre,description) {\r\n        var url = props.url + \"topics/\" + props.idTopic;\r\n\r\n        axios.put(url,{\r\n            title:titre,\r\n            message:description\r\n        }).then((reponse)=> {\r\n            console.log(reponse.data);\r\n            showMessage({\r\n                message: 'La discussion a été modifiée',\r\n                type: 'success',\r\n              });\r\n            setEnable(false);\r\n            props.navigation.navigate(\"Discussions\",{idTheme:props.idTheme, titreTheme:props.titreTheme});\r\n        }).catch(err=> {\r\n                showMessage({\r\n                    message: 'Modification échouée',\r\n                    type: 'danger',\r\n                  });\r\n                  setEnable(true);\r\n          });\r\n}\r\n\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        <View style={styles.discussion}>\r\n          <Text style={styles.titreTheme}>{titreTheme}</Text>\r\n          <Display enable={Enable}>\r\n            <Text style={{color: 'red', marginTop: -30, alignSelf: 'center'}}>\r\n              {' '}\r\n              le titre et la description sont obligatoires{' '}\r\n            </Text>\r\n          </Display>\r\n          <Divider style={{backgroundColor: 'black', marginBottom: 20}} />\r\n          {/* <Divider style={{ backgroundColor: 'black' }} />  */}\r\n          <Text>Titre: </Text>\r\n          <TextInput\r\n            value={titre}\r\n            style={styles.titleZone}\r\n            onChangeText={setTitre}\r\n          />\r\n\r\n          <Text>Description: </Text>\r\n          <ScrollView style={{height: 80}}>\r\n            <TextInput\r\n              style={styles.DescriptionZone}\r\n              value={inputValue}\r\n              onChangeText={setInputValue}\r\n              multiline\r\n            />\r\n          </ScrollView>\r\n          <View style={{flexDirection: 'row', justifyContent: 'flex-end'}}>\r\n            <Display enable={!EnableBtn}>\r\n              <Button\r\n                icon={{\r\n                  name: 'send',\r\n                  size: 20,\r\n                  color: 'black',\r\n                }}\r\n                type=\"outline\"\r\n                raised\r\n                onPress={() => {\r\n                  insertNouvelleDiscussion(titre, inputValue);\r\n                }}\r\n              />\r\n            </Display>\r\n            <Display enable={EnableBtn}>\r\n              <Button\r\n                icon={{\r\n                  name: 'edit',\r\n                  size: 20,\r\n                  color: 'black',\r\n                }}\r\n                type=\"outline\"\r\n                raised\r\n                onPress={() => {\r\n                  modifierDiscussion(titre,inputValue);\r\n                }}\r\n              />\r\n            </Display>\r\n          </View>\r\n        </View>\r\n      </View>\r\n    );\r\n}\r\n\r\nconst width = Dimensions.get('window').width; //full width\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        width: width,\r\n        flex:1,\r\n        backgroundColor: '#111111',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n    },\r\n    discussion: {\r\n        height:400,\r\n        padding: 10,\r\n        width: width - 10,\r\n        backgroundColor: \"#ffffff\",\r\n        borderColor: \"#000000\",\r\n        borderRadius: 10,\r\n        marginVertical: 5,\r\n    },\r\n    titleZone:{\r\n        height:50,\r\n        borderWidth:2,\r\n        borderRadius:8,\r\n        padding: 10\r\n   \r\n        \r\n    },\r\n    DescriptionZone:{\r\n        height:150,\r\n        borderWidth:2,\r\n        borderRadius:8,\r\n        textAlignVertical:\"top\",\r\n        padding: 10\r\n        \r\n    },\r\n    titreTheme:{\r\n        fontSize:30,\r\n        alignSelf:'center',\r\n        marginBottom:30,\r\n\r\n    }\r\n\r\n});\r\nexport default NewDiscussion"]},"metadata":{},"sourceType":"module"}