{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\allah\\\\OneDrive\\\\Documents\\\\GitHub\\\\my-app\\\\Components\\\\Replies.js\";\n\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { useIsFocused } from \"@react-navigation/native\";\nimport ActionButton from 'react-native-action-button';\nimport Heading from \"./Forum/Heading\";\nimport Reply from \"./Forum/Reply\";\nimport Discussion from \"./Forum/Discussion\";\nimport axios from 'axios';\n\nvar Replies = function Replies(props) {\n  var Enable = false;\n  var idProfil = props.idProfil;\n  var titreTheme = props.titreTheme;\n  var isFocused = useIsFocused();\n\n  var wait = function wait(timeout) {\n    return new Promise(function (resolve) {\n      return setTimeout(resolve, timeout);\n    });\n  };\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      refreshing = _React$useState2[0],\n      setRefreshing = _React$useState2[1];\n\n  var onRefresh = React.useCallback(function () {\n    setRefreshing(true);\n    wait(100).then(function () {\n      setRefreshing(false);\n    });\n  }, []);\n\n  var _useState = useState(props.discussion),\n      _useState2 = _slicedToArray(_useState, 2),\n      discussion = _useState2[0],\n      setDiscussion = _useState2[1];\n\n  var idTopic = props.idTopic;\n  var urlDisc = props.url + \"topics/\" + idTopic;\n  useEffect(function () {\n    axios.get(urlDisc).then(function (reponse) {\n      setDiscussion(reponse.data.Topic);\n    }).catch(function (erreur) {\n      console.log(erreur);\n    });\n  }, [isFocused, refreshing]);\n  var url = props.url + 'comments/topics/' + idTopic;\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      listReplies = _useState4[0],\n      setListReplies = _useState4[1];\n\n  useEffect(function () {\n    axios.get(url).then(function (reponse) {\n      setListReplies(reponse.data);\n    }).catch(function (erreur) {\n      console.log(erreur);\n    });\n  }, [isFocused, refreshing]);\n  var ensRep = [];\n\n  for (var i = 0; i < listReplies.length; i++) {\n    if (listReplies[i].creator._id == idProfil) {\n      Enable = true;\n    } else {\n      Enable = false;\n    }\n\n    ensRep.push(React.createElement(Reply, {\n      key: listReplies[i]._id,\n      reply: listReplies[i],\n      enable: Enable,\n      url: props.url,\n      navigation: props.navigation,\n      titreTheme: titreTheme,\n      discussion: discussion,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: 'black'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, React.createElement(Heading, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \" \", titreTheme), React.createElement(View, {\n    style: styles.discussion,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, React.createElement(Discussion, {\n    key: discussion._id,\n    discussion: discussion,\n    idProfil: idProfil,\n    EnableReplay: false,\n    url: props.url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  })), React.createElement(ScrollView, {\n    refreshControl: React.createElement(RefreshControl, {\n      refreshing: refreshing,\n      onRefresh: onRefresh,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 35\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, ensRep)), React.createElement(ActionButton, {\n    buttonColor: \"teal\",\n    onPress: function onPress() {\n      props.navigation.navigate('NewReply', {\n        titreTheme: titreTheme,\n        discussion: discussion,\n        message: \"\",\n        id: \"\",\n        EnableBtn: false\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar width = Dimensions.get('window').width;\nvar styles = StyleSheet.create({\n  container: {\n    width: width,\n    backgroundColor: '#000000',\n    justifyContent: 'center',\n    alignItems: 'center'\n  },\n  discussion: {\n    borderWidth: 3,\n    borderTopWidth: 5,\n    borderBottomWidth: 5,\n    borderRadius: 10,\n    backgroundColor: 'teal',\n    borderColor: 'teal',\n    borderRadius: 10,\n    marginVertical: 5\n  }\n});\nexport default Replies;","map":{"version":3,"sources":["C:/Users/allah/OneDrive/Documents/GitHub/my-app/Components/Replies.js"],"names":["React","useEffect","useState","useIsFocused","ActionButton","Heading","Reply","Discussion","axios","Replies","props","Enable","idProfil","titreTheme","isFocused","wait","timeout","Promise","resolve","setTimeout","refreshing","setRefreshing","onRefresh","useCallback","then","discussion","setDiscussion","idTopic","urlDisc","url","get","reponse","data","Topic","catch","erreur","console","log","listReplies","setListReplies","ensRep","i","length","creator","_id","push","navigation","flex","justifyContent","alignItems","backgroundColor","styles","container","navigate","message","id","EnableBtn","width","Dimensions","StyleSheet","create","borderWidth","borderTopWidth","borderBottomWidth","borderRadius","borderColor","marginVertical"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { StyleSheet, ScrollView, View, RefreshControl, Dimensions } from 'react-native';\r\nimport { useIsFocused } from \"@react-navigation/native\";\r\nimport ActionButton from 'react-native-action-button';\r\nimport Heading from './Forum/Heading'\r\nimport Reply from './Forum/Reply'\r\nimport Discussion from './Forum/Discussion'\r\n\r\nimport axios from 'axios';\r\n\r\nconst Replies = (props) => {\r\n  // let discussion = props.discussion;\r\n  let Enable = false;\r\n  // let EnableDiscussion = discussion.creator._id == idProfil;\r\n\r\n  const idProfil = props.idProfil;\r\n  const titreTheme = props.titreTheme;\r\n\r\n  // const idTopic = discussion._id;\r\n  const isFocused = useIsFocused();\r\n\r\n  \r\n  //pour rafraichir la page : \r\n  const wait = (timeout) => {\r\n    return new Promise(resolve => setTimeout(resolve, timeout));\r\n  }\r\n  const [refreshing, setRefreshing] = React.useState(false);\r\n\r\n  const onRefresh = React.useCallback(() => {\r\n    setRefreshing(true);\r\n    wait(100).then(() => {\r\n      setRefreshing(false);\r\n    });\r\n  }, []);\r\n\r\n  const [discussion, setDiscussion] = useState(props.discussion);\r\n  const idTopic =  props.idTopic;\r\n  let urlDisc = props.url + \"topics/\" + idTopic\r\n  useEffect(() => {\r\n    axios.get(urlDisc)\r\n      .then((reponse) => {\r\n        //console.log(reponse.data)\r\n        setDiscussion(reponse.data.Topic);\r\n      })\r\n      .catch((erreur) => {\r\n        console.log(erreur)\r\n      })\r\n  }, [isFocused, refreshing]);\r\n\r\n\r\n  \r\n  //pour la récupération des donnés\r\n  let url = props.url + 'comments/topics/' + idTopic;\r\n  const [listReplies, setListReplies] = useState([]);\r\n\r\n  useEffect(() => {\r\n    axios.get(url)\r\n      .then((reponse) => {\r\n        setListReplies(reponse.data);\r\n      })\r\n      .catch((erreur) => {\r\n        console.log(erreur)\r\n      })\r\n  }, [isFocused, refreshing]);\r\n\r\n  let ensRep = []\r\n  for (let i = 0; i < listReplies.length; i++) {\r\n    if (listReplies[i].creator._id == idProfil) {\r\n      Enable = true;\r\n    } else {\r\n      Enable = false;\r\n    }\r\n    ensRep.push(\r\n      <Reply\r\n        key={listReplies[i]._id}\r\n        reply={listReplies[i]}\r\n        enable={Enable}\r\n        url={props.url}\r\n        navigation={props.navigation}\r\n        titreTheme={titreTheme}\r\n        discussion={discussion} />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center', backgroundColor: 'black' }}>\r\n      <Heading> {titreTheme}</Heading>\r\n      <View style={styles.discussion} >\r\n\r\n     \r\n      <Discussion\r\n            key={discussion._id}\r\n            discussion={discussion}\r\n            idProfil={idProfil}\r\n            EnableReplay={false}\r\n            url={props.url} />\r\n             </View>\r\n      <ScrollView refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}>\r\n        <View style={styles.container}>\r\n          {ensRep}\r\n        </View>\r\n      </ScrollView>\r\n      <ActionButton\r\n        buttonColor=\"teal\"\r\n        onPress={() => {\r\n          props.navigation.navigate(\r\n            'NewReply',\r\n            {\r\n              titreTheme: titreTheme,              \r\n              discussion: discussion,\r\n              message: \"\",\r\n              id:\"\",\r\n              EnableBtn: false\r\n            })\r\n        }}\r\n      />\r\n    </View>\r\n  );\r\n}\r\n\r\nconst width = Dimensions.get('window').width; //full width\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    width: width,\r\n    backgroundColor: '#000000',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n  },\r\n  discussion:{\r\n    borderWidth:  3,\r\n    borderTopWidth:  5,\r\n    borderBottomWidth:  5,\r\n    borderRadius:10,\r\n    backgroundColor: 'teal',\r\n    borderColor:  'teal',\r\n    borderRadius: 10,\r\n    marginVertical: 5,\r\n  }\r\n});\r\nexport default Replies"]},"metadata":{},"sourceType":"module"}