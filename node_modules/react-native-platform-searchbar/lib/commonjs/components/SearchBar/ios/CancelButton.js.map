{"version":3,"sources":["CancelButton.tsx"],"names":["CancelButton","text","visible","style","textStyle","onPress","width","setWidth","animationValue","Animated","Value","animation","timing","current","toValue","useNativeDriver","duration","delay","easing","Easing","inOut","ease","start","stop","opacity","transform","translateX","interpolate","inputRange","outputRange","styles","notVisible","e","nativeEvent","layout","cancelButtonText","StyleSheet","create","color","iosBlue","fontSize","position","right"],"mappings":";;;;;;;AAAA;;AACA;;AASA;;AACA;;;;;;;;AAUA,MAAMA,YAA6B,GAAG,CAAC;AACnCC,EAAAA,IADmC;AAEnCC,EAAAA,OAFmC;AAGnCC,EAAAA,KAHmC;AAInCC,EAAAA,SAJmC;AAKnCC,EAAAA;AALmC,CAAD,KAMhC;AACF,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB,sBAA1B;AACA,QAAMC,cAAc,GAAG,mBAAO,IAAIC,sBAASC,KAAb,CAAmBR,OAAO,GAAG,CAAH,GAAO,CAAjC,CAAP,CAAvB;AAEA,8BAAgB,MAAM;AAClB,UAAMS,SAAS,GAAGF,sBAASG,MAAT,CAAgBJ,cAAc,CAACK,OAA/B,EAAwC;AACtDC,MAAAA,OAAO,EAAEZ,OAAO,GAAG,CAAH,GAAO,CAD+B;AAEtDa,MAAAA,eAAe,EAAE,IAFqC;AAGtDC,MAAAA,QAAQ,EAAEd,OAAO,GAAG,GAAH,GAAS,GAH4B;AAItDe,MAAAA,KAAK,EAAEf,OAAO,GAAG,EAAH,GAAQ,CAJgC;AAKtDgB,MAAAA,MAAM,EAAEC,oBAAOC,KAAP,CAAaD,oBAAOE,IAApB;AAL8C,KAAxC,CAAlB;;AAOAV,IAAAA,SAAS,CAACW,KAAV;AACA,WAAOX,SAAS,CAACY,IAAjB;AACH,GAVD,EAUG,CAACrB,OAAD,CAVH;AAYA,sBACI,6BAAC,qBAAD,CAAU,IAAV;AACI,IAAA,KAAK,EAAE,CACH;AACIsB,MAAAA,OAAO,EAAEhB,cAAc,CAACK,OAD5B;AAEIY,MAAAA,SAAS,EAAE,CACP;AACIC,QAAAA,UAAU,EAAElB,cAAc,CAACK,OAAf,CAAuBc,WAAvB,CAAmC;AAC3CC,UAAAA,UAAU,EAAE,CAAC,CAAD,EAAI,CAAJ,CAD+B;AAE3CC,UAAAA,WAAW,EAAE,CAACvB,KAAK,IAAI,CAAV,EAAa,CAAb;AAF8B,SAAnC;AADhB,OADO;AAFf,KADG,EAYH,CAACJ,OAAD,IAAY4B,MAAM,CAACC,UAZhB,EAaH5B,KAbG,CADX;AAgBI,IAAA,QAAQ,EAAE6B,CAAC,IAAI;AACXzB,MAAAA,QAAQ,CAACyB,CAAC,CAACC,WAAF,CAAcC,MAAd,CAAqB5B,KAAtB,CAAR;AACH;AAlBL,kBAoBI,6BAAC,eAAD;AAAQ,IAAA,OAAO,EAAED;AAAjB,kBACI,6BAAC,iBAAD;AAAM,IAAA,KAAK,EAAE,CAACyB,MAAM,CAACK,gBAAR,EAA0B/B,SAA1B;AAAb,KAAoDH,IAApD,CADJ,CApBJ,CADJ;AA0BH,CAhDD;;AAkDA,MAAM6B,MAAM,GAAGM,wBAAWC,MAAX,CAAkB;AAC7BF,EAAAA,gBAAgB,EAAE;AACdG,IAAAA,KAAK,EAAEC,eADO;AAEdC,IAAAA,QAAQ,EAAE;AAFI,GADW;AAK7BT,EAAAA,UAAU,EAAE;AAAEU,IAAAA,QAAQ,EAAE,UAAZ;AAAwBC,IAAAA,KAAK,EAAE;AAA/B;AALiB,CAAlB,CAAf;;eAQe1C,Y","sourcesContent":["import React, { useState, useRef, useLayoutEffect } from 'react';\nimport {\n    Text,\n    StyleSheet,\n    Animated,\n    Easing,\n    StyleProp,\n    ViewStyle,\n    TextStyle,\n} from 'react-native';\nimport { iosBlue } from '../../../constants/colors';\nimport Button from '../../Button';\n\ntype Props = {\n    text: string;\n    visible: boolean;\n    onPress(): void;\n    style?: StyleProp<ViewStyle>;\n    textStyle?: StyleProp<TextStyle>;\n};\n\nconst CancelButton: React.FC<Props> = ({\n    text,\n    visible,\n    style,\n    textStyle,\n    onPress,\n}) => {\n    const [width, setWidth] = useState<number>();\n    const animationValue = useRef(new Animated.Value(visible ? 1 : 0));\n\n    useLayoutEffect(() => {\n        const animation = Animated.timing(animationValue.current, {\n            toValue: visible ? 1 : 0,\n            useNativeDriver: true,\n            duration: visible ? 250 : 200,\n            delay: visible ? 50 : 0,\n            easing: Easing.inOut(Easing.ease),\n        });\n        animation.start();\n        return animation.stop;\n    }, [visible]);\n\n    return (\n        <Animated.View\n            style={[\n                {\n                    opacity: animationValue.current,\n                    transform: [\n                        {\n                            translateX: animationValue.current.interpolate({\n                                inputRange: [0, 1],\n                                outputRange: [width || 1, 0],\n                            }),\n                        },\n                    ],\n                },\n                !visible && styles.notVisible,\n                style,\n            ]}\n            onLayout={e => {\n                setWidth(e.nativeEvent.layout.width);\n            }}\n        >\n            <Button onPress={onPress}>\n                <Text style={[styles.cancelButtonText, textStyle]}>{text}</Text>\n            </Button>\n        </Animated.View>\n    );\n};\n\nconst styles = StyleSheet.create({\n    cancelButtonText: {\n        color: iosBlue,\n        fontSize: 16,\n    },\n    notVisible: { position: 'absolute', right: 0 },\n});\n\nexport default CancelButton;\n"]}